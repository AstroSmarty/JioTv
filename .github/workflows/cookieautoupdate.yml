name: Update M3U Cookie

on:
  schedule:
    # Run every 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch:

env:
  M3U_SOURCE_URL: ${{ secrets.M3U_SOURCE_URL }}

jobs:
  update-cookie:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Fetch cookie from M3U source
      id: get-cookie
      run: |
        echo "Fetching M3U from source..."
        
        # Download the M3U file
        curl -s "${{ env.M3U_SOURCE_URL }}" -o temp_source.m3u
        
        # Extract cookie from the M3U file
        # Look for cookie in EXTHTTP or URL parameters
        COOKIE=""
        
        # Check for cookie in EXTHTTP line
        if grep -q "EXTHTTP" temp_source.m3u; then
          COOKIE=$(grep "EXTHTTP" temp_source.m3u | sed -n 's/.*"cookie":"\([^"]*\)".*/\1/p' | head -1)
        fi
        
        # If no cookie in EXTHTTP, check URL parameters
        if [ -z "$COOKIE" ]; then
          COOKIE=$(grep -o 'cookie=([^)]*' temp_source.m3u | sed 's/cookie=(//' | head -1)
        fi
        
        # If still no cookie, check for __hdnea__ pattern
        if [ -z "$COOKIE" ]; then
          COOKIE=$(grep -o '__hdnea__=[^&]*' temp_source.m3u | head -1)
        fi
        
        # Clean up the cookie (remove quotes, brackets, etc.)
        COOKIE=$(echo "$COOKIE" | sed 's/["{}\[\]]//g')
        
        echo "Extracted cookie: $COOKIE"
        echo "EXTRACTED_COOKIE=$COOKIE" >> $GITHUB_OUTPUT
        
        # Clean up temp file
        rm -f temp_source.m3u
    
    - name: Update playlist.m3u
      if: steps.get-cookie.outputs.EXTRACTED_COOKIE != ''
      run: |
        COOKIE="${{ steps.get-cookie.outputs.EXTRACTED_COOKIE }}"
        
        echo "Updating playlist.m3u with new cookie..."
        echo "Cookie to update: $COOKIE"
        
        # Show current content before update
        echo "Before update:"
        grep -n "cookie" playlist.m3u || echo "No cookie lines found"
        
        # Update the EXTHTTP cookie line
        sed -i 's|#EXTHTTP:{"cookie":"[^"]*"}|#EXTHTTP:{"cookie":"'"$COOKIE"'"}|g' playlist.m3u
        
        # Update the URL cookie parameter - both formats
        sed -i 's|cookie=([^)]*)|cookie=('"$COOKIE"')|g' playlist.m3u
        sed -i 's|%7Ccookie=([^)]*)|%7Ccookie=('"$COOKIE"')|g' playlist.m3u
        
        echo "Cookie updated successfully!"
        
        # Show updated content
        echo "After update:"
        grep -n "cookie" playlist.m3u || echo "No cookie lines found"
    
    - name: Check for changes
      id: check-changes
      run: |
        if git diff --quiet playlist.m3u; then
          echo "No changes detected in playlist.m3u"
          echo "HAS_CHANGES=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected in playlist.m3u"
          echo "HAS_CHANGES=true" >> $GITHUB_OUTPUT
          echo "Changes:"
          git diff playlist.m3u
        fi
    
    - name: Commit and push changes
      if: steps.check-changes.outputs.HAS_CHANGES == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add playlist.m3u
        git commit -m "Update M3U cookie - $(date '+%Y-%m-%d %H:%M:%S')"
        git push
        echo "Changes committed and pushed successfully!"
    
    - name: No changes needed
      if: steps.check-changes.outputs.HAS_CHANGES == 'false'
      run: |
        echo "Cookie is already up to date. No changes needed."
